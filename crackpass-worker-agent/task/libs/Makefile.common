#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#%% @file: Makefile.common													 %%
#%% @desc: common compiler variables and options							 %%
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


CC=gcc -std=c99
CFLAGS=-O3 -Wall -fPIC


CXX=g++ -std=c++11
CXXFLAGS=-O3 -Wall -fPIC
INC_CUDA=-I/usr/local/cuda/include


NVCC=/usr/local/cuda/bin/nvcc
NVCCFLAGS=-ccbin $(CXX) -O3 -Xcompiler -fPIC -rdc=true
## CUDA supported architecture
KEPLER_35= arch=compute_35,code=sm_35
KEPLER_30= arch=compute_30,code=sm_30
ifndef CUDA_TARGET
	NVCC_TARGET=-gencode $(KEPLER_35) -gencode $(KEPLER_30)
endif
ifeq ($(CUDA_TARGET), KEPLER_35)
	NVCC_TARGET=-gencode $(KEPLER_35)
endif
ifeq ($(CUDA_TARGET), KEPLER_30)
	NVCC_TARGET=-gencode $(KEPLER_30)
endif
NVCCFLAGS+=${NVCC_TARGET}
## Optional stream policy: @warning: cuda 6.5 does not support per-thread mode.
ifndef STREAM_POLICY
	NVCCFLAGS+=-D_SINGLE_CUDA_STREAM
endif
ifeq ($(STREAM_POLICY), PER_THREAD)
	NVCCFLAGS+=-D_MULTI_CUDA_STREAM --default-stream per-thread 
endif


## DLL linker: default selection to g++
LD=$(CXX)
LDFLAGS=-Wall -fPIC -shared
LIB_BOOST=-L/usr/lib64/ -lboost_system -lboost_thread
LIB_CUDA=-L/usr/local/cuda/lib64/ -lcuda -lcudart -lcudadevrt

## StaticLib linker: ar
RANLIB=ar rus

## Debugging: add debugging macro @ options
DEBUG_FLAGS=-g -D_DEBUG
ifdef ($(DEBUG))
	CFLAGS+=$(DEBUG_FLAGS)
	CXXFLAGS+=$(DEBUG_FLAGS)
	NVCCFLAGS+=$(DEBUG_FLAGS)
endif


